azurestorage.queues.transactionexpiration.name=transactionexpiration
azurestorage.queues.transactionsrefund.name=transactionsrefund
azurestorage.queues.transactionrefundretry.name=transactionrefundretry
azurestorage.queues.transactionclosepayment.name=transactionclosepayment
azurestorage.queues.transactionclosepaymentretry.name=transactionclosepaymentretry
azurestorage.queues.transactionnotificationretry.name=transactionnotificationretry
azurestorage.queues.transactionnotification.name=transactionnotification
azurestorage.queues.transactionauthorizationrequested.name=transactionauthrequested

azurestorage.transient.connectionstring=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1
azurestorage.queues.deadletter.name=transactionsdeadletter
azurestorage.deadletter.connectionstring=DefaultEndpointsProtocol=http;AccountName=devstoreaccount2;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1

spring.cloud.azure.storage.queue.account-key=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
spring.cloud.azure.storage.queue.account-name=devstoreaccount1
spring.cloud.azure.storage.queue.endpoint=http://127.0.0.1:10001/devstoreaccount1

nodo.uri=https://localhost/nodo
nodo.readTimeout=10000
nodo.connectionTimeout=10000
nodo.ecommerce.clientId=key

spring.redis.host=redis
spring.redis.password=redis
spring.redis.port=9999
spring.redis.ssl=false
spring.data.mongodb.uri=mongodb://mongo:mongo@$mongo:6080/
spring.data.mongodb.database=ecommerce
paymentTransactionsGateway.uri=http://pagopa-payment-transactions-gateway:8080
paymentTransactionsGateway.readTimeout=1000
paymentTransactionsGateway.connectionTimeout=1000
paymentTransactionsGateway.apiKey=API_KEY

server.port=9000

management.endpoint.health.probes.enabled=true

refundRetry.eventOffsetSeconds=60
refundRetry.maxAttempts=3

closePaymentRetry.eventOffsetSeconds=60
closePaymentRetry.maxAttempts=3

notificationRetry.eventOffsetSeconds=60
notificationRetry.maxAttempts=3

transactionAuthorizationRequested.eventOffsetSeconds=60
transactionAuthorizationRequested.maxAttempts=3

notificationsService.uri=http://localhost/notifications-service
notificationsService.readTimeout=10000
notificationsService.connectionTimeout=10000
notificationsService.apiKey=notifications-service-api-key

transactionsService.uri=http://localhost/transactions-service
transactionsService.readTimeout=10000
transactionsService.connectionTimeout=10000
transactionsService.apiKey=transactions-service-api-key

confidentialDataManager.personalDataVault.apiKey=apiKey
confidentialDataManager.personalDataVault.apiBasePath=localhost

sendPaymentResult.timeoutSeconds=3900
sendPaymentResult.expirationOffset=10

npg.uri=https://stg-ta.nexigroup.com/api/phoenix-0.0/psp/api/v1
npg.readTimeout=1000
npg.connectionTimeout=1000
npg.client.apiKey=npg-api-key
npg.authorization.cards.keys={"psp1":"key1","psp2":"key2"}
npg.authorization.cards.pspList=psp1,psp2

redisStream.eventController.streamKey=event-dispatcher-commands
redisStream.eventController.consumerGroupPrefix=event-dispatcher
redisStream.eventController.consumerNamePrefix=event-dispatcher
redisStream.eventController.failOnErrorCreatingConsumerGroup=false
eventController.status.pollingChron=*/10 * * * * *
