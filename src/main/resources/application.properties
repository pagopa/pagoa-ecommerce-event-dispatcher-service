application.name=@project.artifactId@
build.version=@project.version@
azurestorage.queues.transactionexpiration.name=${TRANSACTIONS_EXPIRATION_QUEUE_NAME}
azurestorage.queues.transactionsrefund.name=${TRANSACTIONS_REFUND_QUEUE_NAME}
azurestorage.queues.transactionrefundretry.name=${TRANSACTIONS_REFUND_RETRY_QUEUE_NAME}
azurestorage.queues.transactionclosepayment.name=${TRANSACTIONS_CLOSE_PAYMENT_QUEUE_NAME}
azurestorage.queues.transactionclosepaymentretry.name=${TRANSACTIONS_CLOSE_PAYMENT_RETRY_QUEUE_NAME}
azurestorage.queues.transactionnotificationretry.name=${TRANSACTIONS_NOTIFICATIONS_RETRY_QUEUE_NAME}
azurestorage.queues.transactionnotification.name=${TRANSACTIONS_NOTIFICATIONS_QUEUE_NAME}
azurestorage.queues.deadletter.name=${TRANSACTIONS_DEAD_LETTER_QUEUE_NAME}
azurestorage.connectionstring=${QUEUE_CONNECTION_STRING}

spring.cloud.azure.storage.queue.account-key=${ECOMMERCE_STORAGE_QUEUE_KEY}
spring.cloud.azure.storage.queue.account-name=${ECOMMERCE_STORAGE_QUEUE_ACCOUNT_NAME}
spring.cloud.azure.storage.queue.endpoint=${ECOMMERCE_STORAGE_QUEUE_ENDPOINT}

nodo.uri=${NODO_URI}
nodo.readTimeout=${NODO_READ_TIMEOUT}
nodo.connectionTimeout=${NODO_CONNECTION_TIMEOUT}
spring.data.mongodb.uri=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/?ssl=${MONGO_SSL_ENABLED}&readPreference=primaryPreferred&maxStalenessSeconds=90
spring.data.mongodb.database=ecommerce
paymentTransactionsGateway.uri=${PAYMENT_TRANSACTIONS_GATEWAY_URI}/
paymentTransactionsGateway.readTimeout=${PAYMENT_TRANSACTIONS_GATEWAY_READ_TIMEOUT}
paymentTransactionsGateway.connectionTimeout=${PAYMENT_TRANSACTIONS_GATEWAY_CONNECTION_TIMEOUT}
paymentTransactionsGateway.apiKey=${PAYMENT_TRANSACTIONS_GATEWAY_API_KEY}

server.port=9000

management.endpoint.health.probes.enabled=true

refundRetry.eventOffsetSeconds=${REFUND_RETRY_EVENT_BASE_INTERVAL_SECONDS}
refundRetry.maxAttempts=${REFUND_RETRY_EVENT_MAX_ATTEMPTS}

closePaymentRetry.eventOffsetSeconds=${CLOSE_PAYMENT_RETRY_EVENT_BASE_INTERVAL_SECONDS}
closePaymentRetry.maxAttempts=${CLOSE_PAYMENT_RETRY_EVENT_MAX_ATTEMPTS}
closePaymentRetry.paymentTokenValidityTimeOffset=${CLOSE_PAYMENT_RETRY_EVENT_PAYMENT_TOKEN_VALIDITY_TIME_OFFSET:10}

notificationRetry.eventOffsetSeconds=${NOTIFICATION_RETRY_EVENT_BASE_INTERVAL_SECONDS}
notificationRetry.maxAttempts=${NOTIFICATION_RETRY_EVENT_MAX_ATTEMPTS}

notificationsService.uri=${NOTIFICATIONS_SERVICE_URI}
notificationsService.readTimeout=${NOTIFICATIONS_SERVICE_READ_TIMEOUT}
notificationsService.connectionTimeout=${NOTIFICATIONS_SERVICE_CONNECTION_TIMEOUT}
notificationsService.apiKey=${NOTIFICATIONS_SERVICE_API_KEY}

confidentialDataManager.personalDataVault.apiKey=${PERSONAL_DATA_VAULT_API_KEY}
confidentialDataManager.personalDataVault.apiBasePath=${PERSONAL_DATA_VAULT_API_BASE_PATH}